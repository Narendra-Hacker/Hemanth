14. Find the total number of couriers handled by each employee. 

SELECT e.EmployeeID, e.Name, COUNT(c.CourierID) AS TotalCouriersHandled
FROM employees e
LEFT JOIN payments p ON e.EmployeeID = p.LocationID
LEFT JOIN couriers c ON p.CourierID = c.CourierID
GROUP BY e.EmployeeID, e.Name;

15. Calculate the total revenue generated by each location 

SELECT l.LocationID, l.LocationName, SUM(p.Amount) AS TotalRevenue
FROM locations l
LEFT JOIN payments p ON l.LocationID = p.LocationID
GROUP BY l.LocationID, l.LocationName;

16. Find the total number of couriers delivered to each location. 

SELECT l.LocationID, l.LocationName, COUNT(c.CourierID) AS TotalCouriersDelivered
FROM locations l
LEFT JOIN payments p ON l.LocationID = p.LocationID
LEFT JOIN couriers c ON p.CourierID = c.CourierID
GROUP BY l.LocationID, l.LocationName;

17. Find the courier with the highest average delivery time: 

SELECT c.CourierID, AVG(DATEDIFF(c.DeliveryDate, p.PaymentDate)) AS AvgDeliveryTime
FROM couriers c
JOIN payments p ON c.CourierID = p.CourierID
GROUP BY c.CourierID
ORDER BY AvgDeliveryTime DESC
LIMIT 1;

18. Find Locations with Total Payments Less Than a Certain Amount 

-- Replace 'MaxAmount' with the desired amount
SELECT l.LocationID, l.LocationName, SUM(p.Amount) AS TotalPayments
FROM locations l
LEFT JOIN payments p ON l.LocationID = p.LocationID
GROUP BY l.LocationID, l.LocationName
HAVING TotalPayments < MaxAmount;

19. Calculate Total Payments per Location 

SELECT l.LocationID, l.LocationName, SUM(p.Amount) AS TotalPayments
FROM locations l
LEFT JOIN payments p ON l.LocationID = p.LocationID
GROUP BY l.LocationID, l.LocationName;

20. Retrieve couriers who have received payments totaling more than $1000 in a specific location 
(LocationID = X): 

-- Replace 'LocationID' with the desired location ID
SELECT c.CourierID, c.SenderName, c.ReceiverName, SUM(p.Amount) AS TotalPayments
FROM couriers c
JOIN payments p ON c.CourierID = p.CourierID
WHERE p.LocationID = LocationID
GROUP BY c.CourierID, c.SenderName, c.ReceiverName
HAVING TotalPayments > 1000;

21. Retrieve couriers who have received payments totaling more than $1000 after a certain date 
(PaymentDate > 'YYYY-MM-DD'): 

-- Replace 'StartDate' with the desired start date
SELECT c.CourierID, c.SenderName, c.ReceiverName, SUM(p.Amount) AS TotalPayments
FROM couriers c
JOIN payments p ON c.CourierID = p.CourierID
WHERE p.PaymentDate > 'StartDate'
GROUP BY c.CourierID, c.SenderName, c.ReceiverName
HAVING TotalPayments > 1000;

22. Retrieve locations where the total amount received is more than $5000 before a certain date 
(PaymentDate > 'YYYY-MM-DD')

-- Replace 'EndDate' with the desired end date
SELECT l.LocationID, l.LocationName, SUM(p.Amount) AS TotalPayments
FROM locations l
LEFT JOIN payments p ON l.LocationID = p.LocationID
WHERE p.PaymentDate > 'EndDate'
GROUP BY l.LocationID, l.LocationName
HAVING TotalPayments > 5000;
